/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]

def versions = [:]
versions.activity = '1.0.0-rc01'
versions.android_gradle_plugin = '3.5.0'
versions.appcompat = "1.1.0"
versions.arch_core = "2.0.1"
versions.axt_core = "1.2.0"
versions.axt_junit = "1.1.1"
versions.axt_rules = "1.2.0"
versions.axt_runner = "1.2.0"
versions.benchmark = "1.0.0-alpha04"
versions.constraint_layout = "2.0.0-alpha2"
versions.core_ktx = "1.0.0"
versions.dagger = "2.16"
versions.design = "1.1.0-alpha10"
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.fragment = "1.2.0-alpha04"
versions.glide = "4.8.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.klock = "1.5.0"
versions.koin = "2.0.1"
versions.kotlin = "1.3.50"
versions.kotlinx_co = "1.3.1"
versions.lifecycle = "2.2.0-alpha05"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.navigation = "2.2.0-alpha01"
versions.okhttp_logging_interceptor = "3.9.0"
versions.paging = "2.1.0"
versions.recyclerview = "1.0.0-beta04"
versions.retrofit = "2.3.0"
versions.robolectric = "4.2"
versions.room = "2.1.0"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.support = "1.0.0"
versions.timber = "4.5.1"
versions.viewpager2 = "1.0.0-beta04"
versions.work = "2.1.0"
ext.versions = versions

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.app_compat = "androidx.appcompat:appcompat-resources:$versions.appcompat"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.design = "com.google.android.material:material:$versions.design"
deps.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
deps.viewpager2 = "androidx.viewpager2:viewpager2:$versions.viewpager2"

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
// kapt
room.compiler = "androidx.room:room-compiler:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.testing = "androidx.arch.core:core-testing:$versions.lifecycle"
// kapt
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def activity = [:]
activity.ac_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity

def fragment = [:]
fragment.fr_ktx = "androidx.fragment:fragment-ktx:$versions.fragment"
fragment.testing = "androidx.fragment:fragment-testing:$versions.fragment"
deps.fragment = fragment

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def axt = [:]
axt.core = "androidx.test:core:$versions.axt_core"
axt.ext_junit = "androidx.test.ext:junit:$versions.axt_junit"
axt.runner = "androidx.test:runner:$versions.axt_runner"
axt.rules = "androidx.test:rules:$versions.axt_rules"
deps.axt = axt

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def ktx = [:]
ktx.co_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx_co"
ktx.co_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx_co"
deps.ktx = ktx

deps.koin = "org.koin:koin-android-viewmodel:$versions.koin"

deps.klcok = "com.soywiz.korlibs.klock:klock-jvm:$versions.klock"

def paging = [:]
paging.runtime_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"
paging.common_ktx = "androidx.paging:paging-common-ktx:$versions.paging"
deps.paging = paging

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.benchmark = "androidx.benchmark:benchmark-junit4:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

def build_versions = [:]
build_versions.min_sdk = 16
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://jitpack.io" }
    handler.maven { url 'https://maven.google.com' }
}

ext.addRepos = this.&addRepos
